{"version":3,"sources":["game.js"],"names":["win","defaultVals","coloArr","background","color","GAME","ele","size","vals","Error","matrix","initMatrix","canvas","context","getContext","render","lineWidth","strokeStyle","strokeRect","width","height","Array","fill","map","randomRow1","random","randomCol1","randomRow2","randomCol2","log","range","Math","arr","debug","console","JSON","stringify","replace","window"],"mappings":"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","file":"game.js","sourcesContent":["((win) => {\n  const defaultVals = [\n    '2',\n    '4',\n    '8',\n    '16',\n    '32',\n    '64',\n    '128',\n    '256',\n    '512',\n    '1024',\n    '2048'\n  ]\n  const coloArr = [{\n    background: '#eee4da',\n    color: '#000'\n  },{\n    background: '#ece0c8',\n    color: '#000'\n  },{\n    background: '#f3b179'\n  },{\n    background: '#f59563'\n  },{\n    background: '#f67c5f'\n  },{\n    background: '#f65e3c'\n  },{\n    background: '#edce71'\n  },{\n    background: '#eccb61'\n  },{\n    background: '#edc750'\n  },{\n    background: '#edc631'\n  },{\n    background: '#edc12f'\n  }]\n  class GAME {\n    constructor (ele, {\n      size = 4,\n      vals = defaultVals\n    } = {}) {\n      if (size < 4) throw new Error('Error', '`size` should be greater than 4')\n      this.matrix = initMatrix({\n        size\n      })\n\n      this.vals = vals\n\n      let canvas = this.canvas = ele\n      this.context = canvas.getContext('2d')\n    }\n\n    start () {\n      this.render()\n    }\n\n    render () {\n      let {\n        canvas,\n        context,\n        vals\n      } = this\n\n      context.lineWidth = 4\n      context.strokeStyle = '#bbad9e'\n      context.strokeRect(4, 4, canvas.width - 8, canvas.height - 8)\n    }\n  }\n\n  function initMatrix ({\n    size\n  }) {\n    let matrix = new Array(size).fill(0).map(_ => new Array(size).fill(0))\n\n    let randomRow1 = random(size)\n    let randomCol1 = random(size)\n\n    let randomRow2\n    let randomCol2\n\n    do {\n      randomRow2 = random(size)\n      randomCol2 = random(size)\n    } while (randomRow1 === randomRow2 && randomCol1 === randomCol2)\n\n    matrix[randomRow1][randomCol1] = 1\n    matrix[randomRow2][randomCol2] = 1\n\n    log(matrix)\n  }\n\n  function random (range) {\n    return Math.random() * range | 0\n  }\n\n  win.GAME = win.GAME || GAME\n\n  // test log\n\n  function log (arr) {\n    win.debug && console.log(JSON.stringify(arr).replace(/(],)/g, '],\\n').replace(/\\[|\\]/g, '').replace(/,/g, '|') + '| ')\n  }\n})(window)\n"]}